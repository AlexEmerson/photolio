{"version":3,"sources":["webpack:///./src/components/cover_img.js","webpack:///./src/templates/gallery.js"],"names":["props","style","position","top","right","bottom","left","query","data","pageContext","useEffect","then","GLightbox","default","selector","type","title","defer","className","categories","edges","map","node","key","name","to","inner","childImageSharp","fluid","src","margin","alt","paddingBottom"],"mappings":"4FAAA,8CAIe,aAAAA,GAAK,OAClB,kBAAC,IAAD,iBACMA,EADN,CAEEC,MAAK,eAAIC,SAAU,WAAYC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAAON,EAAMC,OAAS,S,kCCP5F,sHAQaM,EAAK,YAsBH,mBAACP,GAAW,IACjBQ,EAAsBR,EAAtBQ,KAAMC,EAAgBT,EAAhBS,YAYd,OAVAC,qBAAU,WAER,qCAAoBC,MAAK,aACvBC,EADmD,EAAzBC,SAChB,CACRC,SAAU,UACVC,KAAM,gBAMV,kBAAC,IAAWf,EACV,kBAAC,IAAD,CAAQgB,MAAOP,EAAYO,MAAOC,OAAO,IACzC,4BAAKR,EAAYO,OACjB,gCACA,yBAAKE,UAAU,SACZV,EAAKW,WAAWC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACzB,kBAAC,IAAD,CACEC,IAAKD,EAAKE,KACVC,GAAKhB,EAAYiB,MAAuDJ,EAAKK,gBAAgBC,MAAMC,IAA/F,YAAiCpB,EAAYO,MAA7C,IAAsDM,EAAKE,KAC/DN,UAAS,SAAUT,EAAYiB,MAAQ,QAAU,IACjDzB,MAAO,CAAE6B,OAAQ,mBAEjB,0BAAMZ,UAAU,aACd,kBAAC,IAAD,CAAUU,MAAON,EAAKK,gBAAgBC,MAAOG,IAAKT,EAAKE,QAEvDf,EAAYiB,MAAqD,GAA7C,0BAAMR,UAAU,SAASI,EAAKE,WAI1D,yBAAKvB,MAAO,CAAE+B,cAAe,QAAUd,UAAU","file":"component---src-templates-gallery-js-4bffade9a1e0236aa31b.js","sourcesContent":["import React from \"react\";\n\nimport Img from \"gatsby-image\"\n\nexport default props => (\n  <Img\n    {...props}\n    style={{ position: 'absolute', top: 0, right: 0, bottom: 0, left: 0, ...(props.style || {}) }}\n  />\n);\n","import React, { useEffect } from \"react\";\n\nimport { graphql, Link } from \"gatsby\";\nimport { Helmet } from 'react-helmet';\n\nimport Layout from \"../components/layout_inner\";\nimport CoverImg from \"../components/cover_img\";\n\nexport const query = graphql`\n  query CategoryImages($categoryDir: String!) {\n    categories: allFile(\n      filter: {\n        relativeDirectory: { eq: $categoryDir }\n      },\n      sort: { fields: ctime }\n    ) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 1920) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default (props) => {\n  const { data, pageContext } = props;\n\n  useEffect(() => {\n    // workaround glightbox not supporting ssr\n    import('glightbox').then(({ default: GLightbox }) => {\n      GLightbox({\n        selector: 'a.photo',\n        type: 'image'\n      });\n    });\n  });\n\n  return (\n    <Layout {...props}>\n      <Helmet title={pageContext.title} defer={false} />\n      <h1>{pageContext.title}</h1>\n      <p>&nbsp;</p>\n      <div className=\"cards\">\n        {data.categories.edges.map(({ node }) => (\n          <Link\n            key={node.name}\n            to={!pageContext.inner ? `/gallery/${pageContext.title}/${node.name}` : node.childImageSharp.fluid.src}\n            className={`card ${pageContext.inner ? 'photo' : ''}`}\n            style={{ margin: '1.5% 0 1.5% 3%' }}\n          >\n            <span className=\"thumbnail\">\n              <CoverImg fluid={node.childImageSharp.fluid} alt={node.name} />\n            </span>\n            {!pageContext.inner ? <span className=\"title\">{node.name}</span> : ''}\n          </Link>\n        ))}\n      </div>\n      <div style={{ paddingBottom: \"1.5%\" }} className=\"clear\"></div>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}